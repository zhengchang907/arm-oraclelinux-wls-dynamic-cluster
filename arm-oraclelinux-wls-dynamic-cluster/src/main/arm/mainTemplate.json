{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
        "aadsPortNumber": {
            "defaultValue": "636",
            "type": "string",
            "metadata": {
                "description": "Accessible port of the LDAP server."
            }
        },
        "aadsPublicIP": {
            "defaultValue": "",
            "type": "string"
        },
        "aadsServerHost": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The LDAP server host."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "adminUsername": {
            "defaultValue": "weblogic",
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminVMName": {
            "defaultValue": "adminVM",
            "type": "string",
            "metadata": {
                "description": "Admin Server hosting VM name."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "databaseType": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "One of the supported database types"
            }
        },
        "dbPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Password for Database"
            }
        },
        "dbUser": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Userid of Database"
            }
        },
        "dnsLabelPrefix": {
            "defaultValue": "wls",
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "dsConnectionURL": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "JDBC Connection String"
            }
        },
        "dynamicClusterSize": {
            "defaultValue": 2,
            "type": "int",
            "metadata": {
                "description": "Initial Number of Managed Servers that will be configured in the Dynamic Cluster"
            }
        },
        "elasticsearchEndpoint": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Endpoint of the Elasticsearch instance."
            }
        },
        "elasticsearchPassword": {
            "type": "securestring",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "The credentials to distibute message with REST API to Elasticsearch instance."
            }
        },
        "elasticsearchUserName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The credentials to distibute message with REST API to Elasticsearch instance."
            }
        },
        "enableAAD": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "Bool value, if it's set to true, will enable Azure Active Directory after WebLogic Server starts."
            }
        },
        "enableCoherence": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "If true, create Coherence cluster with data tier for cache."
            }
        },
        "enableCoherenceWebLocalStorage": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Specifies whether Local Storage is enabled for the Coherence*Web cluster tier."
            }
        },
        "enableDB": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "If true, use the supplied parameters to connect the cluster to a pre-provisioned database."
            }
        },
        "enableELK": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "If true, use the supplied parameters to distribute WebLogic Server logs to the Elasticsearch instance."
            }
        },
         "enableOHS": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "Bool value, if it's set to true, it will setup OHS and configures for WebLogic Server cluster"            
            }        
        },
       "jdbcDataSourceName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "JNDI Name for JDBC Datasource"
            }
        },
        "keyType": {
            "type": "string",
            "defaultValue": "PKCS12",
            "allowedValues": [
              "JKS",
              "PKCS12"            
            ],
            "metadata": {
                "description": "Provide Key type is JKS or PKCS12 signed certificates for OHS. Default is PKCS12 format"            
            }
        },
        "keyVaultName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "KeyVault Name where certificates are stored for OHS" 
            }
        },
        "keyVaultResourceGroup": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Resource group name in current subscription containing the KeyVault for OHS" 
            }
        },
        "keyVaultSSLCertDataSecretName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The name of the secret in the specified KeyVault whose value is the SSL Certificate Data for OHS" 
            }
        },
        "keyVaultSSLCertPasswordSecretName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The name of the secret in the specified KeyVault whose value is the password for the SSL Certificate for OHS" 
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "logsToIntegrate": {
            "type": "array",
            "defaultValue": [ "HTTPAccessLog", "ServerLog", "DomainLog", "DataSourceLog", "StandardErrorAndOutput", "NodeManagerLog" ],
            "allowedValues": [ "HTTPAccessLog", "ServerLog", "DomainLog", "DataSourceLog", "StandardErrorAndOutput","NodeManagerLog" ],
            "metadata": {
                "description": "Specify the expeted logs to integrate, you must input at least one log."
            }
        },
        "managedServerPrefix": {
            "defaultValue": "msp",
            "type": "string",
            "metadata": {
                "description": "Provide managed server prefix names"
            }
        },
        "maxDynamicClusterSize": {
            "defaultValue": 10,
            "type": "int",
            "metadata": {
                "description": "Maximum Number of Managed Servers allowed to be configured in the Dynamic Cluster"
            }
        },
         "numberOfCoherenceCacheInstances": {
            "defaultValue": 1,
            "type": "int",
            "minValue": 1,
            "maxValue": 10,
            "metadata": {
                "description": "Number of Coherence cache instances, used to create virtual machines and Managed Server."
            }
        },
        "ohsComponentName": {
            "defaultValue": "ohs_azure",
            "type": "string",
            "metadata": {
                "description": "Provide OHS component name"          
            }
        },
        "ohsDomainName": {
            "defaultValue": "ohsStandaloneDomain",
            "type": "string",
            "metadata": {
                "description": "Provide OHS domain name"            
            }
        },
        "ohsNMPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Password for OHS NodeManager"      
            }
        },
        "ohsNMUser": {
            "defaultValue": "weblogic",
            "type": "string",
            "metadata": {
                "description": "Provide OHS NodeManager user name"       
            }
        },
        "ohsSkuUrnVersion": {
            "type": "string",
            "defaultValue": "wls-base-image-test1-preview;test-ohs-122140-jdk8-ol76;latest",
            "allowedValues": [
              "wls-base-image-test1-preview;test-ohs-122140-jdk8-ol76;latest",
              "wls-base-image-test1-preview;test-ohs-122140-jdk8-ol74;latest",
              "wls-base-image-test1-preview;test-ohs-122140-jdk8-ol73;latest"
             ],                    
            "metadata": {
                "description": "The Oracle Linux image with OHS and Java preinstalled. Semicolon separated string of Sku, URN, and Version"            
            }
        },
        "ohsVMName": {
            "defaultValue": "ohsVM",
            "type": "string",
            "metadata": {
                "description": "OHS Server hosting VM name."
            }
        },
        "ohshttpPort": {
            "defaultValue": "7777",
            "type": "string",
            "metadata": {
                "description": "Provide OHS HTTP port"  
            }
        },
        "ohshttpsPort": {
            "defaultValue": "4444",
            "type": "string",
            "metadata": {
                "description": "Provide OHS HTTPS port"  
            }
        },
        "oracleVaultPswd": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Password for Oracle Vault required for OHS"      
            }
        },      
        "portsToExpose": {
            "defaultValue": "80,443,7001-9000",
            "type": "string",
            "metadata": {
                "description": "Ports and port ranges to expose"
            }
        },
        "skuUrnVersion": {
           "type": "string",
           "defaultValue": "owls-141100-jdk11-ol76;Oracle:weblogic-141100-jdk11-ol76:owls-141100-jdk11-ol7;latest",
           "allowedValues": [
              "owls-122130-jdk8-ol73;Oracle:weblogic-122130-jdk8-ol73:owls-122130-jdk8-ol7;latest",
              "owls-122130-jdk8-ol74;Oracle:weblogic-122130-jdk8-ol74:owls-122130-jdk8-ol7;latest",
              "owls-122140-jdk8-ol76;Oracle:weblogic-122140-jdk8-ol76:owls-122140-jdk8-ol7;latest",
              "owls-141100-jdk8-ol76;Oracle:weblogic-141100-jdk8-ol76:owls-141100-jdk8-ol7;latest",
              "owls-141100-jdk11-ol76;Oracle:weblogic-141100-jdk11-ol76:owls-141100-jdk11-ol7;latest"
           ],
           "metadata": {
              "description": "The Oracle Linux image with Weblogic and Java preinstalled. Semicolon separated string of Sku, URN, and Version"
           }
        },
        "usePreviewImage": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Bool value, if it's set to true, will deploy with preview weblogic image."
            }
        },
        "useSystemAssignedManagedIdentity": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Bool value, if it's set to true, a system assigned managed identity will to be created for the VM(s)"
            }
        },
        "vmSizeSelect": {
            "defaultValue": "Standard_A1",
            "type": "string",
            "metadata": {
                "description": "Select appropriate VM Size as per requirement"
            }
        },
        "vmSizeSelectForCoherence": {
            "defaultValue": "Standard_A3",
            "type": "string",
            "metadata": {
                "description": "Select appropriate VM Size for Coherence"
            }
        },
        "wlsDomainName": {
            "defaultValue": "wlsd",
            "type": "string",
            "metadata": {
                "description": "Provide Weblogic domain name"
            }
        },
        "wlsLDAPGroupBaseDN": {
            "defaultValue": "null",
            "type": "string",
            "metadata": {
                "description": "The base distinguished name (DN) of the tree in the LDAP directory that contains groups."
            }
        },
        "wlsLDAPPrincipal": {
            "defaultValue": "null",
            "type": "string",
            "metadata": {
                "description": "The Distinguished Name (DN) of the LDAP user that WebLogic Server should use to connect to the LDAP server."
            }
        },
        "wlsLDAPPrincipalPassword": {
            "defaultValue": "[newGuid()]",
            "type": "securestring",
            "metadata": {
                "description": "The credential (usually a password) used to connect to the LDAP server."
            }
        },
        "wlsLDAPProviderName": {
            "defaultValue": "AzureActiveDirectoryProvider",
            "type": "string",
            "metadata": {
                "description": "The value used for creating authentication provider name of WebLogic Server."
            }
        },
        "wlsLDAPSSLCertificate": {
            "defaultValue": "null",
            "type": "string",
            "metadata": {
                "description": "Client certificate that will be imported to trust store of SSL."
            }
        },
        "wlsLDAPUserBaseDN": {
            "defaultValue": "null",
            "type": "string",
            "metadata": {
                "description": "The base distinguished name (DN) of the tree in the LDAP directory that contains users."
            }
        },
        "wlsPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for your Weblogic domain name"
            }
        },
        "wlsUserName": {
            "defaultValue": "weblogic",
            "type": "string",
            "metadata": {
                "description": "Username for your Weblogic domain name"
            }
        }
    },
    "variables": {
        "const_currentSubscription": "[subscription().subscriptionId]",
        "name_aadLinkedTemplateName": "aadNestedTemplate.json",
        "name_clusterLinkedTemplateName": "clusterTemplate.json",
        "name_dbLinkedTemplateName": "dbTemplate.json",
        "name_elkLinkedTemplateName": "elkNestedTemplate.json",
        "name_coherenceTemplateName": "coherenceTemplate.json",
        "name_ohsLinkedTemplateName": "ohsNestedTemplate.json"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${dynamic.start}",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "clusterLinkedTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_clusterLinkedTemplateName')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPasswordOrKey')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminVMName": {
                        "value": "[parameters('adminVMName')]"
                    },
                    "authenticationType": {
                        "value": "[parameters('authenticationType')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[parameters('dnsLabelPrefix')]"
                    },
                    "dynamicClusterSize": {
                        "value": "[parameters('dynamicClusterSize')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedServerPrefix": {
                        "value": "[parameters('managedServerPrefix')]"
                    },
                    "maxDynamicClusterSize": {
                        "value": "[parameters('maxDynamicClusterSize')]"
                    },
                    "portsToExpose": {
                        "value": "[parameters('portsToExpose')]"
                    },
                    "skuUrnVersion": {
                        "value": "[parameters('skuUrnVersion')]"
                    },
                    "usePreviewImage": {
                        "value": "[parameters('usePreviewImage')]"
                    },
                    "useSystemAssignedManagedIdentity": {
                        "value": "[parameters('useSystemAssignedManagedIdentity')]"
                    },
                    "vmSizeSelect": {
                        "value": "[parameters('vmSizeSelect')]"
                    },
                    "wlsDomainName": {
                        "value": "[parameters('wlsDomainName')]"
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "dbLinkedTemplate",
            "condition": "[parameters('enableDB')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'clusterLinkedTemplate')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_dbLinkedTemplateName')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminVMName": {
                        "value": "[parameters('adminVMName')]"
                    },
                    "databaseType": {
                        "value": "[parameters('databaseType')]"
                    },
                    "dbPassword": {
                        "value": "[parameters('dbPassword')]"
                    },
                    "dbUser": {
                        "value": "[parameters('dbUser')]"
                    },
                    "dsConnectionURL": {
                        "value": "[parameters('dsConnectionURL')]"
                    },
                    "jdbcDataSourceName": {
                        "value": "[parameters('jdbcDataSourceName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"
                    }
                }
            }
        },
        {
            "name": "aadLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'dbLinkedTemplate')]"
            ],
            "condition": "[parameters('enableAAD')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_aadLinkedTemplateName')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "aadsPortNumber": {
                        "value": "[parameters('aadsPortNumber')]"
                    },
                    "aadsPublicIP": {
                        "value": "[parameters('aadsPublicIP')]"
                    },
                    "aadsServerHost": {
                        "value": "[parameters('aadsServerHost')]"
                    },
                    "adminVMName": {
                        "value": "[parameters('adminVMName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managedServerPrefix": {
                        "value": "[parameters('managedServerPrefix')]"
                    },
                    "dynamicClusterSize": {
                        "value": "[parameters('dynamicClusterSize')]"
                    },
                    "wlsDomainName": {
                        "value": "[parameters('wlsDomainName')]"
                    },
                    "wlsLDAPGroupBaseDN": {
                        "value": "[parameters('wlsLDAPGroupBaseDN')]"
                    },
                    "wlsLDAPPrincipal": {
                        "value": "[parameters('wlsLDAPPrincipal')]"
                    },
                    "wlsLDAPPrincipalPassword": {
                        "value": "[parameters('wlsLDAPPrincipalPassword')]"
                    },
                    "wlsLDAPProviderName": {
                        "value": "[parameters('wlsLDAPProviderName')]"
                    },
                    "wlsLDAPSSLCertificate": {
                        "value": "[parameters('wlsLDAPSSLCertificate')]"
                    },
                    "wlsLDAPUserBaseDN": {
                        "value": "[parameters('wlsLDAPUserBaseDN')]"
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"
                    }
                }
            }
        },
        {
            "name": "elkLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'aadLinkedTemplate')]"
            ],
            "condition": "[parameters('enableELK')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_elkLinkedTemplateName')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminVMName": {
                        "value": "[parameters('adminVMName')]"
                    },
                    "elasticsearchEndpoint": {
                        "value": "[parameters('elasticsearchEndpoint')]"
                    },
                    "elasticsearchPassword": {
                        "value": "[parameters('elasticsearchPassword')]"
                    },
                    "elasticsearchUserName": {
                        "value": "[parameters('elasticsearchUserName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "logsToIntegrate": {
                        "value": "[parameters('logsToIntegrate')]"
                    },
                    "managedServerPrefix": {
                        "value": "[parameters('managedServerPrefix')]"
                    },
                    "maxDynamicClusterSize": {
                        "value": "[parameters('maxDynamicClusterSize')]"
                    },
                    "numberOfManagedApplicationInstances": {
                        "value": "[parameters('dynamicClusterSize')]"
                    },
                    "wlsDomainName": {
                        "value": "[parameters('wlsDomainName')]"
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"
                    }
                }
            }
        },
        {
            "name": "coherenceTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'elkLinkedTemplate')]"
            ],
            "apiVersion": "${azure.apiVersion}",
            "condition": "[parameters('enableCoherence')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_coherenceTemplateName')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPasswordOrKey')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "authenticationType": {
                        "value": "[parameters('authenticationType')]"
                    },
                    "adminVMName": {
                        "value": "[parameters('adminVMName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[parameters('dnsLabelPrefix')]"
                    },
                    "elasticsearchEndpoint": {
                        "value": "[parameters('elasticsearchEndpoint')]"
                    },
                    "elasticsearchPassword": {
                        "value": "[parameters('elasticsearchPassword')]"
                    },
                    "elasticsearchUserName": {
                        "value": "[parameters('elasticsearchUserName')]"
                    },
                    "enableCoherenceWebLocalStorage": {
                        "value": "[parameters('enableCoherenceWebLocalStorage')]"
                    },
                    "enableELK": {
                        "value": "[parameters('enableELK')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "logIndex": {
                        "value": "[if(parameters('enableELK'), reference('elkLinkedTemplate', '${azure.apiVersion}').outputs.logIndex.value, '')]"
                    },
                    "logsToIntegrate": {
                        "value": "[parameters('logsToIntegrate')]"
                    },
                    "managedServerPrefix": {
                        "value": "[parameters('managedServerPrefix')]"
                    },
                    "numberOfCoherenceCacheInstances": {
                        "value": "[parameters('numberOfCoherenceCacheInstances')]"
                    },
                    "skuUrnVersion": {
                        "value": "[parameters('skuUrnVersion')]"
                    },
                    "storageAccountName": {
                        "value": "[reference('clusterLinkedTemplate', '${azure.apiVersion}').outputs.storageAccountName.value]"
                    },
                    "usePreviewImage": {
                        "value": "[parameters('usePreviewImage')]"
                    },
                    "vmSizeSelectForCoherence": {
                        "value": "[parameters('vmSizeSelectForCoherence')]"
                    },
                    "wlsDomainName": {
                        "value": "[parameters('wlsDomainName')]"
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"
                    }
                }
            }
        },
        {
            "name": "ohsLinkedTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'clusterLinkedTemplate')]"
            ],
            "apiVersion": "${azure.apiVersion}",
            "condition": "[parameters('enableOHS')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/', variables('name_ohsLinkedTemplateName')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"                  
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('adminPasswordOrKey')]"                    
                    },
                    "authenticationType": {
                        "value": "[parameters('authenticationType')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[parameters('dnsLabelPrefix')]"
                    },
                    "storageAccountName": {
                        "value": "[reference('clusterLinkedTemplate','${azure.apiVersion}').outputs.storageAccountName.value]"					
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "ohsComponentName": {
                        "value": "[parameters('ohsComponentName')]"                    
                    },
                    "ohsDomainName": {
                        "value": "[parameters('ohsDomainName')]"                    
                    },
                    "ohsNMPassword": {
                        "value": "[parameters('ohsNMPassword')]"                    
                    },
                    "ohsNMUser": {
                        "value": "[parameters('ohsNMUser')]"                    
                    },
                    "ohsSkuUrnVersion": {
                        "value": "[parameters('ohsSkuUrnVersion')]"                    
                    },
                    "ohsVMName": {
                        "value": "[parameters('ohsVMName')]"                    
                    },
                    "ohshttpPort": {
                        "value": "[parameters('ohshttpPort')]"                    
                    },
                    "ohshttpsPort": {
                        "value": "[parameters('ohshttpsPort')]"                    
                    },
                    "ohsSSLKeystoreData": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(variables('const_currentSubscription'),  parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                            },
                            "secretName": "[parameters('keyVaultSSLCertDataSecretName')]"
                        }                                                    
                    },
                    "ohsSSLKeystorePassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(variables('const_currentSubscription'),  parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                            },
                            "secretName": "[parameters('keyVaultSSLCertPasswordSecretName')]"
                        }					
                    },
                    "oracleVaultPswd": {
                        "value": "[parameters('oracleVaultPswd')]"					
                    },
                    "virtualNetworkName": {
                        "value": "[reference('clusterLinkedTemplate','${azure.apiVersion}').outputs.virtualNetworkName.value]"					
                    },
                    "adminRestMgmtURL": {
                        "value": "[reference('clusterLinkedTemplate','${azure.apiVersion}').outputs.adminRestMgmtURL.value]"					
                    },
                    "wlsPassword": {
                        "value": "[parameters('wlsPassword')]"					
                    },
                    "wlsUserName": {
                        "value": "[parameters('wlsUserName')]"					
                    },
                    "keyType": {
                        "value": "[parameters('keyType')]"					
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${dynamic.end}",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'clusterLinkedTemplate')]",
                "[resourceId('Microsoft.Resources/deployments', 'aadLinkedTemplate')]",
                "[resourceId('Microsoft.Resources/deployments', 'dbLinkedTemplate')]",
                "[resourceId('Microsoft.Resources/deployments', 'elkLinkedTemplate')]",
                "[resourceId('Microsoft.Resources/deployments', 'coherenceTemplate')]",
                "[resourceId('Microsoft.Resources/deployments', 'ohsLinkedTemplate')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        }

    ],
    "outputs": {
        "wlsDomainLocation": {
            "type": "string",
            "value": "[reference('clusterLinkedTemplate','${azure.apiVersion}').outputs.wlsDomainLocation.value]"
        },
        "adminHostName": {
            "type": "string",
            "value": "[reference('clusterLinkedTemplate','${azure.apiVersion}').outputs.adminHostName.value]"
        },
        "adminConsole": {
            "type": "string",
            "value": "[reference('clusterLinkedTemplate','${azure.apiVersion}').outputs.adminConsole.value]"
        },
        "adminSecuredConsole": {
            "type": "string",
            "value": "[reference('clusterLinkedTemplate','${azure.apiVersion}').outputs.adminSecuredConsole.value]"
        },
        "logIndex": {
            "type": "string",
            "value": "[if(parameters('enableELK'), reference('elkLinkedTemplate', '${azure.apiVersion}').outputs.logIndex.value, '')]"
        },
        "ohsAccessURL":{
            "type": "string",
            "value": "[if(parameters('enableOHS'), reference('ohsLinkedTemplate', '${azure.apiVersion}').outputs.ohsAccessURL.value, '')]"
        },
        "ohsSecureAccessURL":{
            "type": "string",
            "value": "[if(parameters('enableOHS'), reference('ohsLinkedTemplate', '${azure.apiVersion}').outputs.ohsSecureAccessURL.value, '')]"
        }
    }
}
